'use strict';

var memwatch = require('memwatch-next'),
    cl = require('../src/index').default,
    path = require('path');

memwatch.on('leak', function (info) {
    console.log('WARNING: ' + info.reason + ' - Growth: ' + info.growth);
});

var lmdb = new cl.nodes.storage.LMDBNode(),
    graph = new cl.nodes.output.GraphNode(path.resolve('../data/nanobrains-rawdata'));

lmdb.openDataSet(path.resolve('../data/lmdb/20151208_15h59m12s_nanobrain-reduced'), '20151208_15h59m12s_nanobrain');
graph.meta = lmdb.meta;

graph.on('done', function () {
    console.log('done!');
    process.exit(0);
});

graph.on('error', function (err) {
    console.log(err.message);
    process.exit(err.code);
});

var outputUuid = lmdb.createOutput('20151208_15h59m12s_nanobrain', new cl.quantities.Time(0.0), new cl.quantities.Time(0.0));

lmdb.outputs[outputUuid].stream.pipe(graph.input);
lmdb.startOutput(outputUuid);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5iLWdyYXBoLmpzIl0sIm5hbWVzIjpbIm1lbXdhdGNoIiwicmVxdWlyZSIsImNsIiwiZGVmYXVsdCIsInBhdGgiLCJvbiIsImluZm8iLCJjb25zb2xlIiwibG9nIiwicmVhc29uIiwiZ3Jvd3RoIiwibG1kYiIsIm5vZGVzIiwic3RvcmFnZSIsIkxNREJOb2RlIiwiZ3JhcGgiLCJvdXRwdXQiLCJHcmFwaE5vZGUiLCJyZXNvbHZlIiwib3BlbkRhdGFTZXQiLCJtZXRhIiwicHJvY2VzcyIsImV4aXQiLCJlcnIiLCJtZXNzYWdlIiwiY29kZSIsIm91dHB1dFV1aWQiLCJjcmVhdGVPdXRwdXQiLCJxdWFudGl0aWVzIiwiVGltZSIsIm91dHB1dHMiLCJzdHJlYW0iLCJwaXBlIiwiaW5wdXQiLCJzdGFydE91dHB1dCJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxXQUFXQyxRQUFRLGVBQVIsQ0FBakI7QUFBQSxJQUNJQyxLQUFLRCxRQUFRLGNBQVIsRUFBd0JFLE9BRGpDO0FBQUEsSUFFSUMsT0FBT0gsUUFBUSxNQUFSLENBRlg7O0FBSUFELFNBQVNLLEVBQVQsQ0FBWSxNQUFaLEVBQW9CLFVBQVNDLElBQVQsRUFBZTtBQUMvQkMsWUFBUUMsR0FBUixlQUF3QkYsS0FBS0csTUFBN0IsbUJBQWlESCxLQUFLSSxNQUF0RDtBQUNILENBRkQ7O0FBSUEsSUFBTUMsT0FBTyxJQUFJVCxHQUFHVSxLQUFILENBQVNDLE9BQVQsQ0FBaUJDLFFBQXJCLEVBQWI7QUFBQSxJQUNJQyxRQUFRLElBQUliLEdBQUdVLEtBQUgsQ0FBU0ksTUFBVCxDQUFnQkMsU0FBcEIsQ0FBOEJiLEtBQUtjLE9BQUwsQ0FBYSw0QkFBYixDQUE5QixDQURaOztBQUdBUCxLQUFLUSxXQUFMLENBQWlCZixLQUFLYyxPQUFMLENBQWEsbURBQWIsQ0FBakIsRUFDSSw4QkFESjtBQUVBSCxNQUFNSyxJQUFOLEdBQWFULEtBQUtTLElBQWxCOztBQUVBTCxNQUFNVixFQUFOLENBQVMsTUFBVCxFQUFpQixZQUFNO0FBQ25CRSxZQUFRQyxHQUFSLENBQVksT0FBWjtBQUNBYSxZQUFRQyxJQUFSLENBQWEsQ0FBYjtBQUNILENBSEQ7O0FBS0FQLE1BQU1WLEVBQU4sQ0FBUyxPQUFULEVBQWtCLFVBQUNrQixHQUFELEVBQVM7QUFDdkJoQixZQUFRQyxHQUFSLENBQVllLElBQUlDLE9BQWhCO0FBQ0FILFlBQVFDLElBQVIsQ0FBYUMsSUFBSUUsSUFBakI7QUFDSCxDQUhEOztBQUtBLElBQU1DLGFBQWFmLEtBQUtnQixZQUFMLENBQ2YsOEJBRGUsRUFFZixJQUFJekIsR0FBRzBCLFVBQUgsQ0FBY0MsSUFBbEIsQ0FBdUIsR0FBdkIsQ0FGZSxFQUdmLElBQUkzQixHQUFHMEIsVUFBSCxDQUFjQyxJQUFsQixDQUF1QixHQUF2QixDQUhlLENBQW5COztBQU1BbEIsS0FBS21CLE9BQUwsQ0FBYUosVUFBYixFQUF5QkssTUFBekIsQ0FBZ0NDLElBQWhDLENBQXFDakIsTUFBTWtCLEtBQTNDO0FBQ0F0QixLQUFLdUIsV0FBTCxDQUFpQlIsVUFBakIiLCJmaWxlIjoibmItZ3JhcGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtZW13YXRjaCA9IHJlcXVpcmUoJ21lbXdhdGNoLW5leHQnKSxcbiAgICBjbCA9IHJlcXVpcmUoJy4uL3NyYy9pbmRleCcpLmRlZmF1bHQsXG4gICAgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxubWVtd2F0Y2gub24oJ2xlYWsnLCBmdW5jdGlvbihpbmZvKSB7XG4gICAgY29uc29sZS5sb2coYFdBUk5JTkc6ICR7aW5mby5yZWFzb259IC0gR3Jvd3RoOiAke2luZm8uZ3Jvd3RofWApO1xufSk7XG5cbmNvbnN0IGxtZGIgPSBuZXcgY2wubm9kZXMuc3RvcmFnZS5MTURCTm9kZSgpLFxuICAgIGdyYXBoID0gbmV3IGNsLm5vZGVzLm91dHB1dC5HcmFwaE5vZGUocGF0aC5yZXNvbHZlKCcuLi9kYXRhL25hbm9icmFpbnMtcmF3ZGF0YScpKTtcblxubG1kYi5vcGVuRGF0YVNldChwYXRoLnJlc29sdmUoJy4uL2RhdGEvbG1kYi8yMDE1MTIwOF8xNWg1OW0xMnNfbmFub2JyYWluLXJlZHVjZWQnKSxcbiAgICAnMjAxNTEyMDhfMTVoNTltMTJzX25hbm9icmFpbicpO1xuZ3JhcGgubWV0YSA9IGxtZGIubWV0YTtcblxuZ3JhcGgub24oJ2RvbmUnLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ2RvbmUhJyk7XG4gICAgcHJvY2Vzcy5leGl0KDApO1xufSk7XG5cbmdyYXBoLm9uKCdlcnJvcicsIChlcnIpID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIubWVzc2FnZSk7XG4gICAgcHJvY2Vzcy5leGl0KGVyci5jb2RlKTtcbn0pO1xuXG5jb25zdCBvdXRwdXRVdWlkID0gbG1kYi5jcmVhdGVPdXRwdXQoXG4gICAgJzIwMTUxMjA4XzE1aDU5bTEyc19uYW5vYnJhaW4nLFxuICAgIG5ldyBjbC5xdWFudGl0aWVzLlRpbWUoMC4wKSxcbiAgICBuZXcgY2wucXVhbnRpdGllcy5UaW1lKDAuMClcbik7XG5cbmxtZGIub3V0cHV0c1tvdXRwdXRVdWlkXS5zdHJlYW0ucGlwZShncmFwaC5pbnB1dCk7XG5sbWRiLnN0YXJ0T3V0cHV0KG91dHB1dFV1aWQpO1xuIl19