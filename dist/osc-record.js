'use strict';

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var memwatch = require('memwatch-next'),
    cl = require('../src/index').default,
    path = require('path'),
    lmdbIn = new cl.nodes.storage.LMDBNode(),
    osc = new cl.nodes.io.OSCNode(52777),
    dataPath = path.resolve('../data/lmdb/osc-record-test');

var inputUuid = void 0,
    DataChannels = {};

memwatch.on('leak', function (info) {
    console.log('WARNING: ' + info.reason + ' - Growth: ' + info.growth);
});

lmdbIn.createDataSet(dataPath, 2.0, 'osc-record-test');

lmdbIn.on('stats', function (stats) {
    if (stats.data.in && stats.data.in.DataEvent >= 1000) {
        osc.disable();
    }
});

lmdbIn.on('done', function () {
    console.log('done!');
    process.exit(0);
});

lmdbIn.on('error', function (err) {
    console.log(err.message);
    process.exit(err.code);
});

osc.on('addchannel', function (channel) {
    lmdbIn.meta.DataSet.DataChannels[channel.uuid] = (0, _assign2.default)({}, lmdbIn.meta.DataSet.DataChannels['osc-record-test']);
    lmdbIn.meta.DataSet.DataChannels[channel.uuid].title = channel.title;
});

DataChannels['osc-record-test'] = {
    type: {
        class: 'DataEvent',
        type: null,
        length: 0
    },
    keySize: 16,
    keyPrecision: 6,
    keyUnit: null,
    units: [],
    labels: [],
    uuids: []
};

inputUuid = lmdbIn.createInput(DataChannels, false);

osc.enableMessageReceive();
osc.output.pipe(lmdbIn.inputs[inputUuid].stream);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9zYy1yZWNvcmQuanMiXSwibmFtZXMiOlsibWVtd2F0Y2giLCJyZXF1aXJlIiwiY2wiLCJkZWZhdWx0IiwicGF0aCIsImxtZGJJbiIsIm5vZGVzIiwic3RvcmFnZSIsIkxNREJOb2RlIiwib3NjIiwiaW8iLCJPU0NOb2RlIiwiZGF0YVBhdGgiLCJyZXNvbHZlIiwiaW5wdXRVdWlkIiwiRGF0YUNoYW5uZWxzIiwib24iLCJpbmZvIiwiY29uc29sZSIsImxvZyIsInJlYXNvbiIsImdyb3d0aCIsImNyZWF0ZURhdGFTZXQiLCJzdGF0cyIsImRhdGEiLCJpbiIsIkRhdGFFdmVudCIsImRpc2FibGUiLCJwcm9jZXNzIiwiZXhpdCIsImVyciIsIm1lc3NhZ2UiLCJjb2RlIiwiY2hhbm5lbCIsIm1ldGEiLCJEYXRhU2V0IiwidXVpZCIsInRpdGxlIiwidHlwZSIsImNsYXNzIiwibGVuZ3RoIiwia2V5U2l6ZSIsImtleVByZWNpc2lvbiIsImtleVVuaXQiLCJ1bml0cyIsImxhYmVscyIsInV1aWRzIiwiY3JlYXRlSW5wdXQiLCJlbmFibGVNZXNzYWdlUmVjZWl2ZSIsIm91dHB1dCIsInBpcGUiLCJpbnB1dHMiLCJzdHJlYW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsSUFBTUEsV0FBV0MsUUFBUSxlQUFSLENBQWpCO0FBQUEsSUFDSUMsS0FBS0QsUUFBUSxjQUFSLEVBQXdCRSxPQURqQztBQUFBLElBRUlDLE9BQU9ILFFBQVEsTUFBUixDQUZYO0FBQUEsSUFHSUksU0FBUyxJQUFJSCxHQUFHSSxLQUFILENBQVNDLE9BQVQsQ0FBaUJDLFFBQXJCLEVBSGI7QUFBQSxJQUlJQyxNQUFNLElBQUlQLEdBQUdJLEtBQUgsQ0FBU0ksRUFBVCxDQUFZQyxPQUFoQixDQUF3QixLQUF4QixDQUpWO0FBQUEsSUFLSUMsV0FBV1IsS0FBS1MsT0FBTCxDQUFhLDhCQUFiLENBTGY7O0FBT0EsSUFBSUMsa0JBQUo7QUFBQSxJQUFlQyxlQUFlLEVBQTlCOztBQUVBZixTQUFTZ0IsRUFBVCxDQUFZLE1BQVosRUFBb0IsVUFBU0MsSUFBVCxFQUFlO0FBQy9CQyxZQUFRQyxHQUFSLGVBQXdCRixLQUFLRyxNQUE3QixtQkFBaURILEtBQUtJLE1BQXREO0FBQ0gsQ0FGRDs7QUFJQWhCLE9BQU9pQixhQUFQLENBQXFCVixRQUFyQixFQUErQixHQUEvQixFQUFvQyxpQkFBcEM7O0FBRUFQLE9BQU9XLEVBQVAsQ0FBVSxPQUFWLEVBQW1CLFVBQUNPLEtBQUQsRUFBVztBQUMxQixRQUFJQSxNQUFNQyxJQUFOLENBQVdDLEVBQVgsSUFBaUJGLE1BQU1DLElBQU4sQ0FBV0MsRUFBWCxDQUFjQyxTQUFkLElBQTJCLElBQWhELEVBQXNEO0FBQ2xEakIsWUFBSWtCLE9BQUo7QUFDSDtBQUNKLENBSkQ7O0FBTUF0QixPQUFPVyxFQUFQLENBQVUsTUFBVixFQUFrQixZQUFNO0FBQ3BCRSxZQUFRQyxHQUFSLENBQVksT0FBWjtBQUNBUyxZQUFRQyxJQUFSLENBQWEsQ0FBYjtBQUNILENBSEQ7O0FBS0F4QixPQUFPVyxFQUFQLENBQVUsT0FBVixFQUFtQixVQUFDYyxHQUFELEVBQVM7QUFDeEJaLFlBQVFDLEdBQVIsQ0FBWVcsSUFBSUMsT0FBaEI7QUFDQUgsWUFBUUMsSUFBUixDQUFhQyxJQUFJRSxJQUFqQjtBQUNILENBSEQ7O0FBS0F2QixJQUFJTyxFQUFKLENBQU8sWUFBUCxFQUFxQixVQUFDaUIsT0FBRCxFQUFhO0FBQzlCNUIsV0FBTzZCLElBQVAsQ0FBWUMsT0FBWixDQUFvQnBCLFlBQXBCLENBQWlDa0IsUUFBUUcsSUFBekMsSUFDSSxzQkFBYyxFQUFkLEVBQWlCL0IsT0FBTzZCLElBQVAsQ0FBWUMsT0FBWixDQUFvQnBCLFlBQXBCLENBQWlDLGlCQUFqQyxDQUFqQixDQURKO0FBRUFWLFdBQU82QixJQUFQLENBQVlDLE9BQVosQ0FBb0JwQixZQUFwQixDQUFpQ2tCLFFBQVFHLElBQXpDLEVBQStDQyxLQUEvQyxHQUF1REosUUFBUUksS0FBL0Q7QUFDSCxDQUpEOztBQU1BdEIsYUFBYSxpQkFBYixJQUFrQztBQUM5QnVCLFVBQU07QUFDRkMsZUFBTyxXQURMO0FBRUZELGNBQU0sSUFGSjtBQUdGRSxnQkFBUTtBQUhOLEtBRHdCO0FBTTlCQyxhQUFTLEVBTnFCO0FBTzlCQyxrQkFBYyxDQVBnQjtBQVE5QkMsYUFBUyxJQVJxQjtBQVM5QkMsV0FBTyxFQVR1QjtBQVU5QkMsWUFBUSxFQVZzQjtBQVc5QkMsV0FBTztBQVh1QixDQUFsQzs7QUFjQWhDLFlBQVlULE9BQU8wQyxXQUFQLENBQW1CaEMsWUFBbkIsRUFBaUMsS0FBakMsQ0FBWjs7QUFFQU4sSUFBSXVDLG9CQUFKO0FBQ0F2QyxJQUFJd0MsTUFBSixDQUFXQyxJQUFYLENBQWdCN0MsT0FBTzhDLE1BQVAsQ0FBY3JDLFNBQWQsRUFBeUJzQyxNQUF6QyIsImZpbGUiOiJvc2MtcmVjb3JkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbWVtd2F0Y2ggPSByZXF1aXJlKCdtZW13YXRjaC1uZXh0JyksXG4gICAgY2wgPSByZXF1aXJlKCcuLi9zcmMvaW5kZXgnKS5kZWZhdWx0LFxuICAgIHBhdGggPSByZXF1aXJlKCdwYXRoJyksXG4gICAgbG1kYkluID0gbmV3IGNsLm5vZGVzLnN0b3JhZ2UuTE1EQk5vZGUoKSxcbiAgICBvc2MgPSBuZXcgY2wubm9kZXMuaW8uT1NDTm9kZSg1Mjc3NyksXG4gICAgZGF0YVBhdGggPSBwYXRoLnJlc29sdmUoJy4uL2RhdGEvbG1kYi9vc2MtcmVjb3JkLXRlc3QnKTtcblxubGV0IGlucHV0VXVpZCwgRGF0YUNoYW5uZWxzID0ge307XG5cbm1lbXdhdGNoLm9uKCdsZWFrJywgZnVuY3Rpb24oaW5mbykge1xuICAgIGNvbnNvbGUubG9nKGBXQVJOSU5HOiAke2luZm8ucmVhc29ufSAtIEdyb3d0aDogJHtpbmZvLmdyb3d0aH1gKTtcbn0pO1xuXG5sbWRiSW4uY3JlYXRlRGF0YVNldChkYXRhUGF0aCwgMi4wLCAnb3NjLXJlY29yZC10ZXN0Jyk7XG5cbmxtZGJJbi5vbignc3RhdHMnLCAoc3RhdHMpID0+IHtcbiAgICBpZiAoc3RhdHMuZGF0YS5pbiAmJiBzdGF0cy5kYXRhLmluLkRhdGFFdmVudCA+PSAxMDAwKSB7XG4gICAgICAgIG9zYy5kaXNhYmxlKCk7XG4gICAgfVxufSk7XG5cbmxtZGJJbi5vbignZG9uZScsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnZG9uZSEnKTtcbiAgICBwcm9jZXNzLmV4aXQoMCk7XG59KTtcblxubG1kYkluLm9uKCdlcnJvcicsIChlcnIpID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIubWVzc2FnZSk7XG4gICAgcHJvY2Vzcy5leGl0KGVyci5jb2RlKTtcbn0pO1xuXG5vc2Mub24oJ2FkZGNoYW5uZWwnLCAoY2hhbm5lbCkgPT4ge1xuICAgIGxtZGJJbi5tZXRhLkRhdGFTZXQuRGF0YUNoYW5uZWxzW2NoYW5uZWwudXVpZF0gPVxuICAgICAgICBPYmplY3QuYXNzaWduKHt9LGxtZGJJbi5tZXRhLkRhdGFTZXQuRGF0YUNoYW5uZWxzWydvc2MtcmVjb3JkLXRlc3QnXSk7XG4gICAgbG1kYkluLm1ldGEuRGF0YVNldC5EYXRhQ2hhbm5lbHNbY2hhbm5lbC51dWlkXS50aXRsZSA9IGNoYW5uZWwudGl0bGU7XG59KTtcblxuRGF0YUNoYW5uZWxzWydvc2MtcmVjb3JkLXRlc3QnXSA9IHtcbiAgICB0eXBlOiB7XG4gICAgICAgIGNsYXNzOiAnRGF0YUV2ZW50JyxcbiAgICAgICAgdHlwZTogbnVsbCxcbiAgICAgICAgbGVuZ3RoOiAwXG4gICAgfSxcbiAgICBrZXlTaXplOiAxNixcbiAgICBrZXlQcmVjaXNpb246IDYsXG4gICAga2V5VW5pdDogbnVsbCxcbiAgICB1bml0czogW10sXG4gICAgbGFiZWxzOiBbXSxcbiAgICB1dWlkczogW11cbn07XG5cbmlucHV0VXVpZCA9IGxtZGJJbi5jcmVhdGVJbnB1dChEYXRhQ2hhbm5lbHMsIGZhbHNlKTtcblxub3NjLmVuYWJsZU1lc3NhZ2VSZWNlaXZlKCk7XG5vc2Mub3V0cHV0LnBpcGUobG1kYkluLmlucHV0c1tpbnB1dFV1aWRdLnN0cmVhbSk7XG4iXX0=